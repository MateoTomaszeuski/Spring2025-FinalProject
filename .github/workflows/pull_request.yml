name: Test Pull Request
on : 
- pull_request

jobs:
  Check_Linting_and_Warns:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # git clone

      - name: Check linting and warns
        run: |
          docker build \
              -f Dockerfiles/check.Dockerfile \
              -t consilium_linting_and_warns_container \
          .

  Test_Project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # git clone

    #using docker for integration testing
      - name: build Tests
        run: |
            docker build \
                -f Dockerfiles/tests.Dockerfile \
                -t consilium_test_container \
            .

      - name: run tests
        run: docker run consilium_test_container

  
  Integration_Test_Project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4 # git clone

    #using docker for integration testing
      - name: Spin up Api and Database
        run: docker compose -f docker-compose.integration-test.yml up -d --build

      - name: build integration Tests
        run: |
            docker build \
                -f Dockerfiles/integrationtest.Dockerfile \
                -t consilium_integration_test_container \
            .
            
      - name: run integration tests
        run: docker run --rm --network consilium_network consilium_integration_test_container

      - name: Stop Containers
        run: docker compose down

  build_and_deploy_api:
      needs: [Check_Linting_and_Warns, Test_Project, Integration_Test_Project]
      runs-on: self-hosted
      steps:
      - uses: actions/checkout@v4 # git clone
      
      - name: Extract PR Number
        id: get_pr
        run: |
          pr_number=${{github.event.number}}
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
  
      - name: Check Nodes
        run: kubectl get nodes
  
      - name: Create Namespace
        run: kubectl create namespace consilium-pull-request-${{ steps.get_pr.outputs.pr_number }}
      
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
          
      
      - name : Build image
        run: |
          docker buildx \
          build --platform linux/amd64 \
          -f ./Dockerfiles/Dockerfile \
          -t mateotomaszeuski/consilium:${{ github.run_number }} \
          .
          
      - name: Push image to DockerHub
        run: docker push mateotomaszeuski/consilium:${{ github.run_number }}
      
      - name: Apply Kubernetes Changes
        run: |
          export BUILD_NUMBER=${{ github.run_number }}
          export NAMESPACE=consilium_pull_request_${{ steps.get_pr.outputs.pr_number }}
          export PULL_REQUEST_NUMBER=pr-${{ steps.get_pr.outputs.pr_number }}
          
          for FILE in "kube"/*
          do
              cat $FILE | envsubst | kubectl apply -f -
          done
      
